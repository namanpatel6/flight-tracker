generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String          @id @default(cuid())
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  password       String?
  image          String?
  accounts       Account[]
  alerts         Alert[]
  notifications  Notification[]
  sessions       Session[]
  trackedFlights TrackedFlight[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model TrackedFlight {
  id               String         @id @default(cuid())
  flightNumber     String
  departureAirport String
  arrivalAirport   String
  departureTime    DateTime?
  arrivalTime      DateTime?
  status           String?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  userId           String
  gate             String?
  terminal         String?
  alerts           Alert[]
  notifications    Notification[]
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([flightNumber])
}

model Alert {
  id        String        @id @default(cuid())
  type      String
  threshold Int?
  isActive  Boolean       @default(true)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  userId    String
  flightId  String
  flight    TrackedFlight @relation(fields: [flightId], references: [id], onDelete: Cascade)
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([flightId])
  @@index([isActive])
}

model Notification {
  id        String         @id @default(cuid())
  title     String
  message   String
  type      String
  read      Boolean        @default(false)
  createdAt DateTime       @default(now())
  userId    String
  flightId  String?
  flight    TrackedFlight? @relation(fields: [flightId], references: [id])
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([flightId])
  @@index([read])
}
